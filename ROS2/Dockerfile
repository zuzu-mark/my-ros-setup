#FROM ubuntu:20.04
FROM ros2:my-humble

#MAINTAINER Athanasios Tasoglou <athanasios@tasoglou.net>
#LABEL Description="ROS-Melodic-Desktop (Ubuntu 20.04)" Vendor="TurluCode" Version="1.1"
#LABEL com.turlucode.ros.version="noetic"

# Install packages without prompting the user to answer any questions
ENV DEBIAN_FRONTEND noninteractive 

# Install packages
RUN apt-get update && apt-get install -y \
locales \
lsb-release \
mesa-utils \
git \
vim \
tmux \
cmake \
terminator \
xterm \
wget \
curl \
htop \
libssl-dev \
build-essential \
dbus-x11 \
software-properties-common \
gdb valgrind && \
apt-get clean && rm -rf /var/lib/apt/lists/*

### Install cmake 3.26.4
##RUN git clone https://github.com/Kitware/CMake.git && \
##cd CMake && git checkout tags/v3.26.4 && ./bootstrap --parallel=8 && make -j8 && make install && \
##cd .. && rm -rf CMake
##
### Install tmux 3.3
##RUN apt-get update && apt-get install -y automake autoconf pkg-config libevent-dev libncurses5-dev bison && \
##apt-get clean && rm -rf /var/lib/apt/lists/*
##RUN git clone https://github.com/tmux/tmux.git && \
##cd tmux && git checkout tags/3.3 && ls -la && sh autogen.sh && ./configure && make -j8 && make install



### Install new paramiko (solves ssh issues)
##RUN apt-add-repository universe
##RUN apt-get update && apt-get install -y python3-pip python build-essential && apt-get clean && rm -rf /var/lib/apt/lists/*
##RUN /usr/bin/yes | pip3 install --upgrade pip
##RUN /usr/bin/yes | pip3 install --upgrade virtualenv
##RUN /usr/bin/yes | pip3 install --upgrade paramiko
##RUN /usr/bin/yes | pip3 install --ignore-installed --upgrade numpy protobuf
##RUN /usr/bin/yes | pip3 install --upgrade setuptools

# Locale
RUN locale-gen en_US.UTF-8  
ENV LANG en_US.UTF-8  
ENV LANGUAGE en_US:en  
ENV LC_ALL en_US.UTF-8

## myconifg
ENV TZ=Asia/Tokyo
RUN perl -p -i.bak -e 's%https?://(?!security)[^ \t]+%http://jp.archive.ubuntu.com/ubuntu/%g' /etc/apt/sources.list
RUN chsh -s $(which bash) root


### Install OhMyZSH
##RUN apt-get update && apt-get install -y zsh && apt-get clean && rm -rf /var/lib/apt/lists/*
##RUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true
##RUN chsh -s /usr/bin/zsh root
##RUN git clone https://github.com/sindresorhus/pure /root/.oh-my-zsh/custom/pure
##RUN ln -s /root/.oh-my-zsh/custom/pure/pure.zsh-theme /root/.oh-my-zsh/custom/
##RUN ln -s /root/.oh-my-zsh/custom/pure/async.zsh /root/.oh-my-zsh/custom/
##RUN sed -i -e 's/robbyrussell/refined/g' /root/.zshrc
##RUN sed -i '/plugins=(/c\plugins=(git git-flow adb pyenv tmux)' /root/.zshrc



# Terminator Config
RUN mkdir -p /root/.config/terminator/
COPY assets/terminator_config /root/.config/terminator/config 
COPY assets/terminator_background.png /root/.config/terminator/background.png

### Install ROS
##RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
##RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
##RUN apt-get update && apt-get install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \
##libpcap-dev \
##libopenblas-dev \
##gstreamer1.0-tools libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev \
##ros-noetic-desktop-full python3-rosdep python3-rosinstall-generator python3-vcstool build-essential \
##ros-noetic-socketcan-bridge \
##ros-noetic-geodesy && \
##apt-get clean && rm -rf /var/lib/apt/lists/*

### Configure ROS
##RUN echo "export ROSLAUNCH_SSH_UNKNOWN=1" >> /root/.bashrc
##RUN echo "source /opt/ros/noetic/setup.zsh" >> /root/.zshrc
##RUN echo "export ROSLAUNCH_SSH_UNKNOWN=1" >> /root/.zshrc

# Entry script - This will also run terminator
COPY assets/entrypoint_setup.sh /
ENTRYPOINT ["/entrypoint_setup.sh"]

# ---
CMD ["terminator"]
